schema
@link(url: "https://specs.apollo.dev/link/v1.0")
@link(url: "https://specs.apollo.dev/join/v0.2", for: EXECUTION)
{
    query: Query
    mutation: Mutation
}

directive @join__field(graph: join__Graph!, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, usedOverridden: Boolean) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

scalar join__FieldSet

enum join__Graph {
    INNER @join__graph(name: "inner", url: "http://inner")
    OUTER @join__graph(name: "outer", url: "http://outer")
}

scalar link__Import

enum link__Purpose {
    """
    `SECURITY` features provide metadata necessary to securely resolve fields.
    """
    SECURITY

    """
    `EXECUTION` features provide metadata necessary for operation execution.
    """
    EXECUTION
}

type Mutation
@join__type(graph: INNER)
@join__type(graph: OUTER)
{
    version: Version
    innerMutation: Boolean @join__field(graph: INNER)
    outerMutation: OuterMutationResult @join__field(graph: OUTER)
}

type OuterMutationError
@join__type(graph: OUTER)
{
    message: String!
}

type OuterMutationResult
@join__type(graph: OUTER)
{
    error: OuterMutationError
    mutation: Mutation
}

type Query
@join__type(graph: INNER)
@join__type(graph: OUTER)
{
    version: Version
}

type Version
@join__type(graph: INNER)
@join__type(graph: OUTER)
{
    inner: String! @join__field(graph: INNER)
    outer: String! @join__field(graph: OUTER)
}